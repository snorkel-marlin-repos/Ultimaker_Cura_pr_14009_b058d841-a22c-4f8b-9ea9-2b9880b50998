name: Cura All Installers
run-name: ${{ inputs.cura_conan_version }} for Windows ${{ inputs.build_windows }}, MacOS ${{ inputs.build_macos }}, Linux ${{ inputs.build_linux }}

on:
    workflow_dispatch:
        inputs:
            cura_conan_version:
                description: 'Cura Conan Version'
                default: 'cura/latest@ultimaker/testing'
                required: true
                type: string
            conan_args:
                description: 'Conan args: eq.: --require-override'
                default: ''
                required: false
                type: string
            conan_config:
                description: 'Conan config branch to use'
                default: ''
                required: false
                type: string
            enterprise:
                description: 'Build Cura as an Enterprise edition'
                default: false
                required: true
                type: boolean
            staging:
                description: 'Use staging API'
                default: false
                required: true
                type: boolean
            installer:
                description: 'Create the installer'
                default: true
                required: true
                type: boolean
            build_windows:
                description: 'Build for Windows'
                default: true
                required: true
                type: boolean
            build_linux:
                description: 'Build for Linux'
                default: true
                required: true
                type: boolean
            build_macos:
                description: 'Build for MacOs'
                default: true
                required: true
                type: boolean

    # Run the nightly at 3:25 UTC on working days
    schedule:
    - cron: '25 3 * * 1-5'

jobs:
    windows-installer-create:
        if: ${{ inputs.build_windows }}
        uses: ./.github/workflows/cura-installer.yml
        with:
            platform: 'windows-2022'
            os_name: 'win64'
            cura_conan_version: ${{ inputs.cura_conan_version }}
            conan_args: ${{ inputs.conan_args }}
            conan_config: ${{ inputs.conan_config }}
            enterprise: ${{ inputs.enterprise }}
            staging: ${{ inputs.staging }}
            installer: ${{ inputs.installer }}
        secrets: inherit

    linux-installer-create:
        if: ${{ inputs.build_linux }}
        uses: ./.github/workflows/cura-installer.yml
        with:
            platform: 'ubuntu-20.04'
            os_name: 'linux'
            cura_conan_version: ${{ inputs.cura_conan_version }}
            conan_args: ${{ inputs.conan_args }}
            conan_config: ${{ inputs.conan_config }}
            enterprise: ${{ inputs.enterprise }}
            staging: ${{ inputs.staging }}
            installer: ${{ inputs.installer }}
        secrets: inherit

    linux-modern-installer-create:
        if: ${{ inputs.build_linux }}
        uses: ./.github/workflows/cura-installer.yml
        with:
            platform: 'ubuntu-22.04'
            os_name: 'linux-modern'
            cura_conan_version: ${{ inputs.cura_conan_version }}
            conan_args: ${{ inputs.conan_args }}
            conan_config: ${{ inputs.conan_config }}
            enterprise: ${{ inputs.enterprise }}
            staging: ${{ inputs.staging }}
            installer: ${{ inputs.installer }}
        secrets: inherit

    macos-installer-create:
        if: ${{ inputs.build_macos }}
        uses: ./.github/workflows/cura-installer.yml
        with:
            platform: 'macos-11'
            os_name: 'mac'
            cura_conan_version: ${{ inputs.cura_conan_version }}
            conan_args: ${{ inputs.conan_args }}
            conan_config: ${{ inputs.conan_config }}
            enterprise: ${{ inputs.enterprise }}
            staging: ${{ inputs.staging }}
            installer: ${{ inputs.installer }}
        secrets: inherit
